postgresql:
  image: postgres:9.5
  ports:
    - '5432:5432'
  volumes:
    - ~/data/postgresql:/var/lib/postgresql/data
  restart: unless-stopped

postgis:
  image: mdillon/postgis:latest
  ports:
    - '5432:5432'
  volumes:
    - ~/data/postgis:/var/lib/postgis/data
  restart: unless-stopped

mysql:
  image: mysql:5.7
  ports:
    - '127.0.0.1:3306:3306'
  volumes:
    - ~/data/mysql:/var/lib/mysql
  environment:
    - MYSQL_ROOT_PASSWORD=root
  restart: unless-stopped

elasticsearch:
  image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
  environment:
    - cluster.name=docker-cluster
    - bootstrap.memory_lock=true
    - discovery.type=single-node
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  ulimits:
    memlock:
      soft: -1
      hard: -1
  volumes:
    - ~/data/elasticsearch:/usr/share/elasticsearch/data
  ports:
    - '9200:9200'
    - '9300:9300'
  restart: unless-stopped

kibana:
  image: docker.elastic.co/kibana/kibana:7.3.0
  environment:
    SERVER_NAME: 127.0.0.1
    ELASTICSEARCH_HOSTS: http://elasticsearch:9200
  ports:
    - '5601:5601'
  links:
    - elasticsearch
  restart: unless-stopped

metabase:
  image: metabase/metabase:latest
  ports:
    - "9090:3000"
  volumes:
    - ~/data/metabase:/tmp/metabase.db
  links:
    - mysql
  restart: unless-stopped

redis_with_password:
  image: redis:3.0.5
  ports:
    - '127.0.0.1:6379:6379'
  volumes:
    - ~/data/redis:/data
  command: redis-server --requirepass redis
  restart: unless-stopped

redis:
  image: redis:3.0.5
  ports:
    - '127.0.0.1:6379:6379'
  volumes:
    - ~/data/redis:/data
  restart: unless-stopped

memcached:
  image: memcached:1.4.31
  ports:
    - '127.0.0.1:11211:11211'
  restart: unless-stopped

zookeeper:
  image: wurstmeister/zookeeper
  ports:
    - "2181:2181"
  restart: unless-stopped

kafka:
  image: wurstmeister/kafka
  links:
    - zookeeper
  ports:
    - "9092:9092"
  environment:
    KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  volumes:
    - ~/data/kafka/docker.sock:/var/run/docker.sock
  restart: unless-stopped

kafka-manager:
  container_name: kafka-manager
  image: hlebalbau/kafka-manager:stable
  restart: on-failure
  links:
    - kafka
    - zookeeper
  command: -Dconfig.file=/kafka-manager/conf/application.conf -Dapplication.home=/kafkamanager
  environment:
    ZK_HOSTS: zookeeper:2181
    APPLICATION_SECRET: letmein
  ports:
    - "9000:9000"

zeronet:
  image: nofish/zeronet
  ports:
    - "127.0.0.1:26552:26552"
    - "127.0.0.1:43110:43110"
  environment:
    ENABLE_TOR: 'true'
  volumes:
    - ~/data/zeronet:/root/data

      #web:
      #  build: .
      #  dockerfile: Dockerfile
      #  ports: []
      #  volumes:
      #    - ./:/workspace
      #  links:
      #    - mysql
      #    - redis
